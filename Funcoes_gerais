#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#include <string.h>
#include <time.h>
#include <windows.h>
#include <ctype.h>
#include <math.h>
#define MAX 100

#define c 219
#define a 178
#define tempo 50

#define PRETO  0
#define AZUL 1
#define VERDE 2
#define VERDE_AZULADO 3
#define VERMELHO 4
#define ROXO 5
#define AMARELO 6
#define BRANCO 7
#define CINZA 8
#define AZUL_CLARO 9
#define VERDE_CLARO 10
#define VERDE_MARINHO 11
#define VERMELHO_CLARO 12
#define LILAC 13
#define AMARELO_CLARO 14
#define BRANCO_CLARO 15

#define CIMA 72
#define BAIXO 80
#define ENTER 13
#define ESQUERDA 75
#define DIREITA 77
#define ESC 27

//variável externa globaç
char *arquivo, *arquivo2;
int i, j, x, y;
char seta;
int op0, op1;

//Definição da struct Tempo
typedef struct Tempo{
	int dia, mes, ano;
	int hora, min;
}Tempo;

//Definição da struct Extrato
typedef struct Extrato {
	double valor;
	Tempo data; //data da movimentação
	int id;
	int conta; //número da conta a que foi feita a transferência
	int num_conta; //número da conta do dono do extrato
	char nome[MAX]; //nome do destinatário da transferência
}Extrato;

//Definição da struct Emprestimo
typedef struct Emprestimo {
	Tempo data;
	double valor; //valor do empréstimo
	double parcela; //valor da parcela
	int periodo; //periodo em meses para pagar o empréstimo
	int totalPagas; //total de parcelas pagas;
}Emprestimo;

//Definição de struct Cadastro
typedef struct Cadastro{
	char nome[MAX];
	char senha[MAX];
	char cpf[12];
	char rg[14];
	char email[MAX];
	int num_conta;
	double saldo;
	Tempo data;
	Tempo last_extrato;
	Tempo last_date; //para o cálculo do rendimento da poupança
	Extrato extratos; //uma estrutura de dados para os extratos
	Emprestimo emp; //estrutura de dados para o empréstimo
	int extr; //número de extratos
	int transf; //número de transferências
	int saques;	//número de saques
	int dep; //número de depósitos
	int total; //total de movimentações na conta
	int tipo; //tipo de conta: 0 - poupança, 1 - corrente
	int emprt; //número de empréstimos
}Cad;

//Declaração de funções
void data_hora(Tempo*);
void le_senha_cadastro(char[],Cad*,int);
void le_senha_atualizar(char[],Cad*,int);
void le_senha_conta(char[],int, int);
void escolhe_conta(Cad);
void gotoxy(int,int);
void print_cpf(const char*);
void inicializa_string(char[], int);
void NumConta(FILE*, int*);
int CalculoTempo(Tempo, Tempo);
void TransPoupanca(FILE*, Cad*);
int mes(int, int);
int ano(int);
double CalculoParcela(double, double, int);
double j_compostos(double, double, int);
double j_simples(double, double, int);
void rendimento(Cad*);

//Funções gráficas
void abertura();
void quadrado();
void cls();
void quadrado_menor();
void textcolor (int i);
int sim_nao();

void data_hora(Tempo* data) {
	struct tm *temp;
	
	time_t t;
	
	t=time(NULL);
	temp = localtime(&t);
	
	data->dia = temp->tm_mday;
	data->mes = temp->tm_mon+1;
	data->ano = temp->tm_year+1900;
	data->hora = temp->tm_hour;
	data->min = temp->tm_min;
}

void le_senha_cadastro(char n1[],Cad* n2,int x){
	char ast[100]=" ", aux;
	int a0=0;
	
	//x = 33; y = 29; gotoxy(x, y);
	do{	
		printf ("Nome: %s",n2->nome);
		print_cpf (n2->cpf);
		printf ("Email: %s",n2->email);
		printf ("Deposito inicial: %lf\n", n2->saldo);
		printf ("Senha: %s",ast);
		
		if (x==0){
			cls();
			quadrado_menor();
			x = 46; y = 20; gotoxy(x, y);
			textcolor(VERMELHO);
			printf ("Senha invalida, insira novamente");
		}
			
		aux=getch();
		//putchar('*');
		//x++;
		
		if (aux != 8 && aux != 13){
			ast[a0]='*';
			n1[a0]=aux;
			a0++;
		}
			
		if(aux == 8){
			if(a0>0){
				a0--;
				//x--; gotoxy(x, y);
				ast[a0]=' ';
				//printf(" ");
				//gotoxy(x, y);
			}
		}
		//system("cls");
		
	}while(aux!=13);
	
	printf ("Nome: %s",n2->nome);
	print_cpf (n2->cpf);
	printf ("Email: %s",n2->email);
	printf ("Deposito inicial: %lf\n", n2->saldo);
	printf ("Senha:%s",ast);
}
void le_senha_conta(char n1[],int n, int conta){
	char ast[100]=" ", aux;
	int a0=0;
	
	do{
		//if(a0 > 0)
			//printf("Digite o numero da conta: %d\n", conta);
	x = 24; y = 20; gotoxy(x, y);
	textcolor(VERMELHO_CLARO);
	printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c",
		   218, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 191);
	y++;
	gotoxy(x, y);
	printf("%c SENHA:                                                           %c", 179, 179);
	y++;
	gotoxy(x, y);
	printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c",
		   192, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 217);
	
	x = 33; y = 21; gotoxy(x, y);
	textcolor(BRANCO_CLARO);
	fflush(stdin);
		printf ("%s",ast);
				
		aux=getch();
		
		if (aux!=8&&aux!=13){
			ast[a0]='*';
			n1[a0]=aux;
			a0++;
		}
			
		if(aux==8){
			if(a0>0){
				a0--;
				ast[a0]=' ';
			}
		}
		
	}while(aux!=13);
	
}

void le_senha_atualizar(char n1[],Cad* n2,int x){
	char ast[100]=" ", aux;
	int a0=0, i;
	int x0, y0;
	
	do{
		x = 26; y = 20; gotoxy(x, y);
		textcolor(VERMELHO_CLARO);
		printf ("Digite um novo email: ");
		y++; gotoxy(x, y);
		printf("________________________________________________________________________");
		
		x = 48; y = 20; gotoxy(x, y);
		textcolor(BRANCO_CLARO);
		puts(n2->email);
		
		x0 = 26; y0 = 24; gotoxy(x0, y0);
		textcolor(VERMELHO_CLARO);
		printf ("Senha: "); textcolor(BRANCO_CLARO); printf("%s", ast);
		y0++; gotoxy(x0, y0);
		textcolor(VERMELHO_CLARO);
		printf("________________________________________________________________________");
		x0 = 33; y0 = 24; gotoxy(x0, y0);
		textcolor(BRANCO_CLARO);
		
		if (x==0){
			cls();
			quadrado_menor();
			x0 = 46; y0 = 20; gotoxy(x0, y0);
			textcolor(VERMELHO_CLARO);
			printf ("Senha inv%clida, insira novamente", 160);
		}
			
		aux=getch();
		
		if (aux!=8&&aux!=13){
			ast[a0]='*';
			n1[a0]=aux;
			a0++;
		}
			
		if(aux==8){
			if(a0>0){
				a0--;
				ast[a0]=' ';
			}
		}
		
	}while(aux!=13);
}

void gotoxy(int x, int y){
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE),(COORD){x-1,y-1});
}

void escolhe_conta(Cad n2){
	
	int opc;
	int a0=4;
	int i;
	
	printf ("Escolha o tipo de conta desejado:\n\n");
	
	do{
		gotoxy(4,4);
		printf ("Conta corrente");
		gotoxy(4,5);
		printf ("Conta popan%ca",135);
	
		gotoxy(2,a0);
		printf ("->");

		opc=getch();
		
		if (opc==80){
		
			if (a0==4)
			
				system("cls");
				printf ("Escolha o tipo de conta desejado:\n\n");
	
				a0=5;
			
			}else{
			
				system("cls");
				printf ("Escolha o tipo de conta desejado:\n\n");
	
				a0=4;	
		}
		
		if (opc==72){
			if (a0==4)
				a0=4;
		}
		
	}while(opc!=13);
	system("cls");
	
}

void print_cpf(const char* cpf) {
	int i;
	
	for(i = 0; i < 11; i++)
		printf("%c", cpf[i]);
}

void inicializa_string(char s[], int tam) {
	int i;
	
	for(i = 0; i < tam; i++)
		s[i] = '\0';
}

void NumConta(FILE* file, int* conta) {
	Cad cad;
	int i = 0;
	
	*conta = 0;
		
	if((file = fopen(arquivo, "rb+")) == NULL) {
		cls();
		quadrado_menor();
		x = 46; y = 20; gotoxy(x, y);
		textcolor(VERMELHO_CLARO);
		printf("Erro ao reabrir arquivo");
		exit(1);
	}
	
	while((fread(&cad, sizeof(Cad), 1, file))) {
		i++;
		if(conta_inexistente(file, &cad)) {
			*conta = i;
			break;
		}
		fseek(file, i*sizeof(Cad), SEEK_SET);
	}
	
	if(*conta == 0) {
		*conta = i+1;
	}
	
	fclose(file);
}

int CalculoTempo(Tempo passado, Tempo presente) {
	int qtdano = 0, acm_mes = 0, i = 0;
	
	qtdano = presente.ano - passado.ano;
	
	while((presente.mes != passado.mes) || (i != qtdano)) {
		acm_mes += mes(passado.mes, passado.ano);
		if(passado.mes == 12) {
			passado.mes = 0;
			passado.ano++;
			i++;
		}
		passado.mes++;
	}
	
	return acm_mes-(passado.dia-presente.dia);
}

int mes(int mes, int ano) {
	if(mes == 1 || mes == 3 || mes == 5 || mes == 7 || mes == 8 || mes == 10 || mes == 12) {
		return 31;	
	} else {
		if(mes == 2) {
			if(ano%4 == 0) {
				if(ano%100 != 0) {
					return 29;
				}
			} else {
				if(ano%400 == 0) {
					return 29;
				} else {
					return 28;
				}
			}
		} else {
			return 30;
		}
	}
}

//Funções Gráficas
void quadrado(){
	textcolor(BRANCO_CLARO);
	
	x = 5; y = 2;
	gotoxy(x,y);
	printf("%c", 201);
	i = 0;
	x = 6;
	while(i<108){
		printf("%c", 205);
		x++;
		gotoxy(x,y);
		i++;
	} 
	
	printf("%c", 187);
	
	x = 5; y = 3;
	gotoxy(x,y);
	
	for(i=0; i<35; i++){
		printf("%c", 186);
		for(j=0; j<108; j++){
			printf(" ");
		}
		printf("%c", 186);
		y++;
		gotoxy(x,y);
	}
	
	printf("%c", 200);
	x++;
	gotoxy(x,y);
	for(i=0; i<108; i++){
		printf("%c", 205);
		x++;
		gotoxy(x,y);
	}
	printf("%c", 188);
	
	//parte superior
	y = 5;
	x = 5;
	gotoxy(x,y);
	printf("%c", 204);
	
	for(i=0; i<108; i++){
		printf("%c", 205);
	}
	
	printf("%c", 185);
}

void cls(){
	/*x = 6; y = 3;
	gotoxy(x, y);
	printf("                                                                                                            ");
	y++;
	gotoxy(x, y);
	printf("                                                                                                            ");
	y++;*/
	x = 6; y = 5;
	for(i=0; i<32; i++){
		y++;
		gotoxy(x, y);
		printf("                                                                                                            ");
	}
}

void quadrado_menor(){
	x = 42; y = 15;
	gotoxy(x, y);
	textcolor(BRANCO_CLARO);
	printf("%c", 201);
	i = 0;
	x = 43;
	while(i<28){//parte superior
		printf("%c", 205);
		x++;
		gotoxy(x,y);
		i++;
	} 
	printf("%c", 187);
	x = 42; y = 16;
	gotoxy(x,y);
	for(i=0; i<10; i++){//interior do quadrado
		x = 42; gotoxy(x, y);
		printf("%c", 186);
		x += 29; gotoxy(x, y);
		printf("%c", 186);
		y++;
		gotoxy(x,y);
	}
	x = 42; gotoxy(x, y);
	printf("%c", 200);
	x++;
	gotoxy(x,y);
	for(i=0; i<28; i++){
		printf("%c", 205);
		x++;
		gotoxy(x,y);
	}
	printf("%c", 188);
}

void abertura(){
	//círculo
	x = 49; y = 3;
	gotoxy(x, y);
	textcolor(BRANCO);
	printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254); Sleep(tempo);
	x = 46; y++; gotoxy(x, y); printf("%c%c%c%c%c                %c%c%c%c%c", 254, 254, 254, 254, 254, 254, 254, 254, 254, 254); Sleep(tempo);
	x = 43; y++; gotoxy(x, y); printf("%c%c%c%c                        %c%c%c%c", 254, 254, 254, 254, 254, 254, 254, 254);  Sleep(tempo);
	x = 41; y++; gotoxy(x, y); printf("%c%c%c                              %c%c%c", 254, 254, 254, 254, 254, 254);  Sleep(tempo);
	x = 39; y++; gotoxy(x, y); printf("%c%c%c                                  %c%c%c", 254, 254, 254, 254, 254, 254);  Sleep(tempo);
	x = 38; y++; gotoxy(x, y); printf("%c%c                                      %c%c", 254, 254, 254, 254);  Sleep(tempo);
	x = 37; y++; gotoxy(x, y); printf("%c%c                                        %c%c", 254, 254, 254, 254);  Sleep(tempo);
	x = 36; y++; gotoxy(x, y); printf("%c                                           %c%c", 254, 254, 254);  Sleep(tempo);
	x = 35; y++; gotoxy(x, y); printf("%c%c                                            %c%c", 254, 254, 254, 254);  Sleep(tempo);
	x = 34; y++; gotoxy(x, y); printf("%c%c                                              %c%c", 254, 254, 254, 254); Sleep(tempo);
	x = 34; y++; gotoxy(x, y); printf("%c                                                %c", 254, 254); Sleep(tempo);
	x = 33; y++; gotoxy(x, y); printf("%c%c                                                %c%c", 254, 254, 254, 254); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c%c                                                %c%c", 254, 254, 254, 254); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c%c                                                %c%c", 254, 254, 254, 254); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c%c                                                %c%c", 254, 254, 254, 254); Sleep(tempo);
	x = 34; y++; gotoxy(x, y); printf("%c%c                                              %c%c", 254, 254, 254, 254); Sleep(tempo);
	x = 35; y++; gotoxy(x, y); printf("%c                                             %c%c", 254, 254, 254); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c%c                                            %c", 254, 254, 254); Sleep(tempo);
	x = 36; y++; gotoxy(x, y); printf("%c%c                                         %c%c", 254, 254, 254, 254); Sleep(tempo);
	x = 38; y++; gotoxy(x, y); printf("%c%c                                      %c%c", 254, 254, 254, 254); Sleep(tempo);
	x = 39; y++; gotoxy(x, y); printf("%c%c                                   %c%c%c", 254, 254, 254, 254, 254); Sleep(tempo);
	x = 40; y++; gotoxy(x, y); printf("%c%c%c                               %c%c%c", 254, 254, 254, 254, 254, 254); Sleep(tempo);
	x = 42; y++; gotoxy(x, y); printf("%c%c%c%c                          %c%c%c", 254, 254, 254, 254, 254, 254, 254); Sleep(tempo);
	x = 45; y++; gotoxy(x, y); printf("%c%c%c%c%c                  %c%c%c%c%c", 254, 254, 254, 254, 254, 254, 254, 254, 254, 254); Sleep(tempo);
	x = 48; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254); Sleep(tempo);
	
	//título
	
	x = 15; y = 31; gotoxy(x, y); textcolor(VERMELHO); printf("%c%c%c%c%c%c                                        %c%c", c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c     %c %c %c%c%c%c%c  %c%c%c%c  %c    %c %c %c%c%c%c%c%c  %c%c%c%c  %c%c%c  %c%c%c%c", c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c     %c %c   %c   %c    %c %c    %c %c %c      %c       %c  %c", c, c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c  %c   %c   %c      %c%c%c%c%c%c %c %c%c%c%c%c   %c%c%c%c  %c    %c%c%c%c", c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c   %c   %c   %c   %c      %c    %c %c %c           %c          %c", c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c    %c  %c   %c   %c    %c %c    %c %c %c      %c    %c     %c    %c", c, c, c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c     %c %c   %c    %c%c%c%c  %c    %c %c %c%c%c%c%c%c  %c%c%c%c       %c%c%c%c", c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	
	x = 80; y = 31; gotoxy(x, y); printf("%c%c%c%c%c%c", c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c     %c   %c%c   %c    %c %c    %c", c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c     %c  %c  %c  %c%c   %c %c   %c", c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c  %c    %c %c %c  %c %c%c%c%c", c, c, c, c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c     %c %c%c%c%c%c%c %c  %c %c %c  %c", c, c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c     %c %c    %c %c   %c%c %c   %c", c, c, c, c, c, c, c, c, c); Sleep(tempo);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c  %c    %c %c    %c %c    %c", c, c, c, c, c, c, c, c, c, c, c, c); Sleep(tempo);
	
	textcolor(VERDE);
	x = 50; y = 7; gotoxy(x, y); printf("%c%c            %c%c%c%c%c%c%c%c ", a, a, a, a, a, a, a, a, a, a);
	x = 45; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c         %c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c            %c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 48; y++; gotoxy(x, y); printf("%c%c%c%c               %c%c%c%c", a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c            %c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 44; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c         %c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 43; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c       %c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 42; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c        %c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 41; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c            %c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c               %c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c                  %c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c                  %c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c                  %c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 42; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a);
	x = 44; y++; gotoxy(x, y); printf("%c%c%c%c%c%c", a, a, a, a, a, a);
	//Saco principal
	
	textcolor(VERDE_CLARO);
	y = 10; x = 56; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a);
	x = 58; y++; gotoxy(x, y); printf("%c%c%c%c%c", a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c", a, a, a, a, a);
	x = 56; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a);
	x = 54; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a);
	x = 52; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 50; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 51; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a, a);
	x = 54; y++; gotoxy(x, y); printf("%c%c%c%c%c%c%c%c%c%c%c%c", a, a, a, a, a, a, a, a, a, a, a, a, a);
	//cifrão
	textcolor(AMARELO);
	x = 57; y = 16; gotoxy(x, y); printf("%c%c%c%c%c", c, c, c, c, c);
	x = 56; y++; gotoxy(x, y); printf("%c", c);
	x = 59; gotoxy(x, y); printf("%c", c);
	x = 62; gotoxy(x, y); printf("%c", c);
	x = 56; y++; gotoxy(x, y); printf("%c", c);
	x = 59; gotoxy(x, y); printf("%c", c);
	x = 57; y++; gotoxy(x, y); printf("%c%c%c%c%c", c, c, c, c, c);
	x = 59; y++; gotoxy(x, y); printf("%c", c);
	x = 62; gotoxy(x, y); printf("%c", c);
	x = 56; y++; gotoxy(x, y); printf("%c", c);
	x = 59; gotoxy(x, y); printf("%c", c);
	x = 62; gotoxy(x, y); printf("%c", c);
	x = 57; y++; gotoxy(x, y); printf("%c%c%c%c%c", c, c, c, c, c);
	Sleep(30);
	x = 45; y = 39; gotoxy(x, y);
	textcolor(VERDE_MARINHO);
	printf("Aperte qualquer tecla para continuar");
	getch();
	gotoxy(x,y);
	printf ("                                    ");
}

void textcolor (int i){
	HANDLE hl = GetStdHandle(STD_OUTPUT_HANDLE);
    CONSOLE_SCREEN_BUFFER_INFO bufferInfo;
    BOOL b = GetConsoleScreenBufferInfo(hl, &bufferInfo);
    bufferInfo.wAttributes &= 0x00F0;
    SetConsoleTextAttribute (hl, bufferInfo.wAttributes |= i);
}

int sim_nao(){
	quadrado_menor();
	op0 = 1;
	while(1){
		x = 50; y = 20; gotoxy(x, y);
		if(op0 == 1) textcolor(AMARELO_CLARO);
		if(op0 == 2) textcolor(BRANCO_CLARO);
		printf("%c%c%c%c%c%c%c%c%c%c%c%c%c", 218, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 191);
		y++;
		gotoxy(x, y);
		printf("%c    SIM    %c", 179, 179);
		y++;
		gotoxy(x, y);
		printf("%c%c%c%c%c%c%c%c%c%c%c%c%c", 192, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 217);
		
		x = 50; y = 23; gotoxy(x, y);
		if(op0 == 1) textcolor(BRANCO_CLARO);
		if(op0 == 2) textcolor(AMARELO_CLARO);
		printf("%c%c%c%c%c%c%c%c%c%c%c%c%c", 218, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 191);
		y++;
		gotoxy(x, y);
		printf("%c    N%cO    %c", 179, 199, 179);
		y++;
		gotoxy(x, y);
		printf("%c%c%c%c%c%c%c%c%c%c%c%c%c", 192, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 196, 217);
		seta = getch();
		switch(seta){
			case CIMA:
				op0 = 1;
			break;
			
			case BAIXO:
				op0 = 2;
			break;
			
			case ENTER:
				if(op0 == 1) return 1;
				if(op0 == 2) return 2;
			break;
			
			default: continue;
		}
	}
}
